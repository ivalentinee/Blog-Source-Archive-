#+SETUPFILE: ../templates/template.org
#+INCLUDE: ../widget-menu.org
#+TITLE: Запись звука в Linux
#+KEYWORDS: linux ardour jack debian guitarix rakarrack qjackctl
#+DATE: <2014-08-01 Пт>

* Вступление
Однажды давно (полгода назад) мне было немного скучно и я занялся написанием пары статей в блог по указанной теме. Оригинальные статьи писались для ресурса [[http://basslife.ru/][basslife]].\\
Оригинальные записи:\\
[[http://www.basslife.ru/forum/blog.php?u=39367&b=161][первая часть]]\\
[[http://www.basslife.ru/forum/blog.php?u=39367&b=162][вторая часть]]\\
[[http://www.basslife.ru/forum/blog.php?u=39367&b=163][третья часть]]\\

Здесь я хочу их продублровать по двум причинам:
1. Потешить себя лишней записью в бложике.
2. Объединить три статьи в одну.
3. Исправить недочёты, дополнить описания, получить отзывы от других людей.
Если в ходе статьи будут обнаружены какие-то речевые или фактические ошибки, если будут предложения по улучшению или дополненю текста статьи, то можно смело писать в комментариях, [[mailto:valentine.emperor@gmail.com][на почту]], во [[https://vk.com/v_emperor][вконтач]], в [[https://plus.google.com/111577518760980284675/posts][Google+]] [[https://plus.google.com/b/115819682119425269708/115819682119425269708][(ещё Google+]]) и даже на [[https://github.com/vemperor/Blog-Source][github]].

* Хардварь
Для записи звука в Linux (да и не только в Linux) нам потребуется некоторое количество аппаратного обеспечения. Подразумевается, что базовый набор для игры на инструменте у нас есть (инструмент, комбарь и кабель для подключения).

** Компьютер.
Не то чтобы нужна ужасная производительность, но некоторые программы эмулируют эффекты, а это - достаточно затратно (особенно в режиме реального времени). +Мне для счастья хватает Asus X501A+ для простой записи --- да, но как только дело касается достаточного количества виртуальных инструментов, всё начинает [[http://lurkmore.so/images/thumb/7/78/Slowpoke.svg/200px-Slowpoke.svg.png][жутко тормозить]].

** [[Http://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B0%D0%BB%D0%BE%D0%B3%D0%BE-%D1%86%D0%B8%D1%84%D1%80%D0%BE%D0%B2%D0%BE%D0%B9_%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C][Способ доставки звука]].
Например, звуковая карта. Обычно крестьяне вроде меня пользуют простые решения в виде внешних USB-карт. В моём случае это [[http://alesis.com/io4][Alesis]] IO4. В любом случае тут есть один важный пункт --- *карта должна работать под Linux*! [[http://risovach.ru/upload/2012/hand/nelzya-prosto-tak-vzyat-i_orig_.jpg][Нельзя просто так взять и купить звуковую карту]]. Желательно как минимум прочитать отзывы в интернете. Могут понадобится знания [[http://lurkmore.to/%D0%90%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA][Буржуйского Языка]] (но мы же уже как-то поставили Linux на свою несчастную ЭВМ? :) ). Если есть возможность включить и проверить™, то лучше так и сделать. Ещё одно важно замечание: карта вполне может работать под Linux, но все ваши могучие битрейты и прочие запредельные характеристики будут ограничены сверху возможностями системы - надо быть к этому готовым.

** Пара лишних инструментальных кабелей.
Даже если Вы не пользуетесь примочками, то вполне вероятно, что Ваша звуковая карта умеет мониторинг - уже лишний кабель, а если всё сложно и потребуется страшная схема - то и не один.

* Программочки
Вот тут-то и начинается [[http://memesmix.net/media/created/nsf4hy.jpg][Безудержное Веселье]].

** Realtime kernel
Те, кто не очень понимают, что это и зачем, могут прочитать [[http://www.ozon.ru/context/detail/id/6140231/][вот эту замечательную книгу]]. Я сам её не читал, но люто рекомендую :).

В Debian пакет называется [[http://packages.debian.org/wheezy/linux-image-rt-amd64][linux-image-rt-<ваша архитектура>]]. Если собираемся записываться - перезагружаемся и выбираем в загрузчике наше RT-ядро.

** [[http://jackaudio.org/][Jack Audio Connection Kit (JACK)]]
Мой любимый пункт. Что это и с чем жуют в подробностях написано на [[https://wiki.archlinux.org/index.php/JACK_Audio_Connection_Kit][Arch Wiki]]. Я расскажу вкратце.

Jack - звуковой сервер с низкой задержкой. Умеет работать поверх всего (вроде даже c [[http://www.freedesktop.org/wiki/Software/PulseAudio/][Pulseaudio]] научился работать). Итак, у нас есть звуковой сервер. "Зачем?" --- спросите вы. А я расскажу. Допустим, что наши программы не просто так швыряют звук во всё что ни есть в системе, а есть /клиенты/. /Клиенты/ нашего звукового /сервера/. Будучи /клиентами/, приложения имеют /входы/ и /выходы/. А что делают со /входами/ и /выходами/? Правильно, соединяют. Но если обычно ответственность за соединение всего и вся висит на приложении, то тут коммутацией занимается /сервер/. Это в свою очередь позволяет нам *соединять что угодно с чем угодно в произвольном порядке*, составляя любую нужную нам цепь. Круто, да?

Итак, про сам Jack-сервер мы немного узнали. Но как нам прожевать эту магию? Правильный ответ --- с болью.

Базовую настройку этой радости я описывать не буду --- читайте на [[https://wiki.archlinux.org/index.php/JACK_Audio_Connection_Kit][Arch Wiki]].

Отвечу на свой же вопрос, возникший у меня однажды. Много позже, когда вы уже запустите сервер и будете развлекаться с эффектами, вы спросите: "Что такое XRUN и почему когда он красненький и больше нуля, то всё падает?". Так вот, когда сервер принимает звук на обработку, информация поступает к нему выборками по сколько-нибудь байт. В случае, если сервер не успевает обработать выборку, он пропускает текущую и принимается за следующую. Так вот такие ошибки и обозначаются волшебным числом XRUN. Впринципе, само наличие таких ошибок не страшно - главное, чтобы оно не увеличивалось с постоянной скоростью, иначе Jack-сервер упадёт. Как бороться с этими ошибками? Увеличивать размер выборки. Но latency будет расти. Вот такая вот печаль.

Ладно, отвлеклись на XRUN. Теперь продолжим про запись звука.

*** [[http://qjackctl.sourceforge.net/][QJackCtl]]
QJackCtl - графическая утилита, написанная с использованием библиотеки [[http://qt.digia.com/][Qt]]. Без этой утилиты использование Jack является болью. Особенно для тех, кто с ним мало знаком. Во всех известных мне дистрибутивах пакет так и называется --- [[http://packages.debian.org/ru/wheezy/qjackctl][qjackctl]].

file:http://s019.radikal.ru/i622/1311/2b/379e621ddae5t.jpg

**** Настройка
Первая полезная функция этой улититы - настройка самого Jack. После запуска QJackCtl нажимаем на /Параметры/. Про "магические настройки" смотрите в Arch Wiki. Пока что нас будут интересовать поля /Интерфейс/ и /Драйвер/.\\
В большинстве случаев в поле /Драйвер/ должно быть написано "alsa" (все буквы в нижнем регистре - это важно). Скорее всего у Вас это поле уже заполнено как надо.

Поле /Интерфейс/ - то, что нам нужно. Тут мы должны проставить нашу звуковую карту. Для этого тыкаем на стрелку вправо, которая находится рядом с самим полем. У меня там есть пункт "IO4". У вас что-то своё.

В правом нижнем углу будет приблизительная задержка. На своём железе с RT-ядром и прочими фиксами у меня задержка в 2 мс почти без XRUN'ов. И это с процессорами эффектов, о которых позже.

Для любителей посинтезировать клавишами нужно поправить ещё одно поле - /Драйвер MIDI/. Там вместо "нет" нужно поставить либо "raw" либо "seq". Про драйвер MIDI для JACK можно почитать [[http://www.alsa-project.org/~tiwai/lk2k/lk2k.html][вот тут]].

После того, как мы настроили Jack, надо его запустить. Для этого надо нажать /Запустить/.\\
После этого надо дать нашему серверу приоритет реального времени. Для этого открываем терминал и вбиваем команду
#+BEGIN_SRC sh
ps -A | grep jackd
#+END_SRC sh
Сие нам выдаст PID нужного процесса. После этого вбиваем команду
#+BEGIN_SRC sh
sudo renice -20 <pid>
#+END_SRC sh
где /pid/ - это та самая циферка в выводе первой команды.

file:http://i067.radikal.ru/1311/08/3eb93ce7be2dt.jpg

Вообще полезно прочитать про команду [[http://en.wikipedia.org/wiki/Nice_(Unix)][nice]].

**** Соединения

Для работы с соединениями есть кнопка /Соединения/. Удивительно, не правда ли? Итак, открывшееся окно у нас поделено на две части. Левая - входы. Правая - выходы. Остальное достаточно интуитивно.

file:http://s019.radikal.ru/i621/1311/a2/fc76385f44bet.jpg

Стоит отметить, что /system/ --- это входы и выходы звуковой карты. Остальное --- различные приложения.
Три основные вкладки --- /Звук/, /MIDI/ и /ALSA/. Для работы с обычными клиентами нам нужна вкладка Звук. Я ещё иногда подключаю USB-Midi клаву --- для таких соединений нужна вкладка MIDI.

**** Коммутатор
Каждый раз проставлять соединения? Может быть. А если их 50? 100? Тут-то нам на помощь и приходит /Коммутатор/.

/Коммутатор/ позволяет завадавать схемы соединений и сохранять их в файлы. Для запоминания этого дела используются имена клиентов и названия их входов/выходов. Для добавления соединения тыкаем на добавить, выбираем приложение и вход/выход. Затем соединяем нужные нам приложения и нажимаем сохранить. Остальное достаточно интуитивно.




#+INCLUDE: ../disqus.org
