#+SETUPFILE: ../templates/template.org
#+INCLUDE: ../widget-menu.org
#+TITLE: Запись звука в Linux
#+KEYWORDS: linux ardour jack debian guitarix rakarrack qjackctl
#+DATE: <2014-08-12 Вт>

* Вступление
Однажды давно (полгода назад) мне было немного скучно и я занялся написанием пары статей в блог по указанной теме. Оригинальные статьи писались для ресурса [[http://basslife.ru/][basslife]].\\
Оригинальные записи:\\
[[http://www.basslife.ru/forum/blog.php?u=39367&b=161][первая часть]]\\
[[http://www.basslife.ru/forum/blog.php?u=39367&b=162][вторая часть]]\\
[[http://www.basslife.ru/forum/blog.php?u=39367&b=163][третья часть]]\\

Здесь я хочу их продублровать по двум причинам:
1. Потешить себя лишней записью в бложике.
2. Объединить три статьи в одну.
3. Исправить недочёты, дополнить описания, получить отзывы от других людей.
Если в ходе статьи будут обнаружены какие-то речевые или фактические ошибки, если будут предложения по улучшению или дополненю текста статьи, то можно смело писать в комментариях, [[mailto:valentine.emperor@gmail.com][на почту]], во [[https://vk.com/v_emperor][вконтач]], в [[https://plus.google.com/111577518760980284675/posts][Google+]] [[https://plus.google.com/b/115819682119425269708/115819682119425269708][(ещё Google+]]) и даже на [[https://github.com/vemperor/Blog-Source][github]].

* Хардварь
Для записи звука в Linux (да и не только в Linux) нам потребуется некоторое количество аппаратного обеспечения. Подразумевается, что базовый набор для игры на инструменте у нас есть (инструмент, комбарь и кабель для подключения).

** Компьютер.
Не то чтобы нужна ужасная производительность, но некоторые программы эмулируют эффекты, а это - достаточно затратно (особенно в режиме реального времени). +Мне для счастья хватает Asus X501A+ для простой записи --- да, но как только дело касается достаточного количества виртуальных инструментов, всё начинает [[http://lurkmore.so/images/thumb/7/78/Slowpoke.svg/200px-Slowpoke.svg.png][жутко тормозить]].

** [[Http://ru.wikipedia.org/wiki/%D0%90%D0%BD%D0%B0%D0%BB%D0%BE%D0%B3%D0%BE-%D1%86%D0%B8%D1%84%D1%80%D0%BE%D0%B2%D0%BE%D0%B9_%D0%BF%D1%80%D0%B5%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C][Способ доставки звука]].
Например, звуковая карта. Обычно крестьяне вроде меня пользуют простые решения в виде внешних USB-карт. В моём случае это [[http://alesis.com/io4][Alesis IO4]]. В любом случае тут есть один важный пункт --- *карта должна работать под Linux*! [[http://risovach.ru/upload/2012/hand/nelzya-prosto-tak-vzyat-i_orig_.jpg][Нельзя просто так взять и купить звуковую карту]]. Желательно как минимум прочитать отзывы в интернете. Могут понадобится знания [[http://lurkmore.to/%D0%90%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%B8%D0%B9_%D1%8F%D0%B7%D1%8B%D0%BA][Буржуйского Языка]] (но мы же уже как-то поставили Linux на свою несчастную ЭВМ? :) ). Если есть возможность включить и проверить™, то лучше так и сделать. Ещё одно важно замечание: карта вполне может работать под Linux, но все ваши могучие битрейты и прочие запредельные характеристики будут ограничены сверху возможностями системы - надо быть к этому готовым.

** Пара лишних инструментальных кабелей.
Даже если Вы не пользуетесь примочками, то вполне вероятно, что Ваша звуковая карта умеет мониторинг - уже лишний кабель, а если всё сложно и потребуется страшная схема - то и не один.

* Программочки
Вот тут-то и начинается [[http://memesmix.net/media/created/nsf4hy.jpg][Безудержное Веселье]].

** Realtime kernel
Те, кто не очень понимают, что это и зачем, могут прочитать [[http://www.ozon.ru/context/detail/id/6140231/][вот эту замечательную книгу]]. Я сам её не читал, но люто рекомендую :).

В Debian пакет называется [[http://packages.debian.org/wheezy/linux-image-rt-amd64][linux-image-rt-<ваша архитектура>]]. Если собираемся записываться - перезагружаемся и выбираем в загрузчике наше RT-ядро.

** [[http://jackaudio.org/][Jack Audio Connection Kit (JACK)]]
Мой любимый пункт. Что это и с чем жуют в подробностях написано на [[https://wiki.archlinux.org/index.php/JACK_Audio_Connection_Kit][Arch Wiki]]. Я расскажу вкратце.

Jack - звуковой сервер с низкой задержкой. Умеет работать поверх всего (вроде даже c [[http://www.freedesktop.org/wiki/Software/PulseAudio/][Pulseaudio]] научился работать). Итак, у нас есть звуковой сервер. "Зачем?" --- спросите вы. А я расскажу. Допустим, что наши программы не просто так швыряют звук во всё что ни есть в системе, а есть /клиенты/. /Клиенты/ нашего звукового /сервера/. Будучи /клиентами/, приложения имеют /входы/ и /выходы/. А что делают со /входами/ и /выходами/? Правильно, соединяют. Но если обычно ответственность за соединение всего и вся висит на приложении, то тут коммутацией занимается /сервер/. Это в свою очередь позволяет нам *соединять что угодно с чем угодно в произвольном порядке*, составляя любую нужную нам цепь. Круто, да?

Итак, про сам Jack-сервер мы немного узнали. Но как нам прожевать эту магию? Правильный ответ --- с болью.

Базовую настройку этой радости я описывать не буду --- читайте на [[https://wiki.archlinux.org/index.php/JACK_Audio_Connection_Kit][Arch Wiki]].

Отвечу на свой же вопрос, возникший у меня однажды. Много позже, когда вы уже запустите сервер и будете развлекаться с эффектами, вы спросите: "Что такое XRUN и почему когда он красненький и больше нуля, то всё падает?". Так вот, когда сервер принимает звук на обработку, информация поступает к нему выборками по сколько-нибудь байт. В случае, если сервер не успевает обработать выборку, он пропускает текущую и принимается за следующую. Так вот такие ошибки и обозначаются волшебным числом XRUN. Впринципе, само наличие таких ошибок не страшно - главное, чтобы оно не увеличивалось с постоянной скоростью, иначе Jack-сервер упадёт. Как бороться с этими ошибками? Увеличивать размер выборки. Но latency будет расти. Вот такая вот печаль.

Ладно, отвлеклись на XRUN. Теперь продолжим про запись звука.

*** [[http://qjackctl.sourceforge.net/][QJackCtl]]
QJackCtl - графическая утилита, написанная с использованием библиотеки [[http://qt.digia.com/][Qt]]. Без этой утилиты использование Jack является болью. Особенно для тех, кто с ним мало знаком. Во всех известных мне дистрибутивах пакет так и называется --- [[http://packages.debian.org/ru/wheezy/qjackctl][qjackctl]].

img-t:qjackctl.png

**** Настройка
Первая полезная функция этой улититы - настройка самого Jack. После запуска QJackCtl нажимаем на /Параметры/. Про "магические настройки" смотрите в Arch Wiki. Пока что нас будут интересовать поля /Интерфейс/ и /Драйвер/.\\
В большинстве случаев в поле /Драйвер/ должно быть написано "alsa" (все буквы в нижнем регистре - это важно). Скорее всего у Вас это поле уже заполнено как надо.

Поле /Интерфейс/ - то, что нам нужно. Тут мы должны проставить нашу звуковую карту. Для этого тыкаем на стрелку вправо, которая находится рядом с самим полем. У меня там есть пункт "IO4". У вас что-то своё.

В правом нижнем углу будет приблизительная задержка. На своём железе с RT-ядром и прочими фиксами у меня задержка в 2 мс почти без XRUN'ов. И это с процессорами эффектов, о которых позже.

Для любителей посинтезировать клавишами нужно поправить ещё одно поле - /Драйвер MIDI/. Там вместо "нет" нужно поставить либо "raw" либо "seq". Про драйвер MIDI для JACK можно почитать [[http://www.alsa-project.org/~tiwai/lk2k/lk2k.html][вот тут]].

После того, как мы настроили Jack, надо его запустить. Для этого надо нажать /Запустить/.\\
После этого надо дать нашему серверу приоритет реального времени. Для этого открываем терминал и вбиваем команду
#+BEGIN_SRC sh
ps -A | grep jackd
#+END_SRC sh
Сие нам выдаст PID нужного процесса. После этого вбиваем команду
#+BEGIN_SRC sh
sudo renice -20 <pid>
#+END_SRC sh
где /pid/ - это та самая циферка в выводе первой команды.

img-t:renice-jackd.png

Вообще полезно прочитать про команду [[http://en.wikipedia.org/wiki/Nice_(Unix)][nice]].

**** Соединения

Для работы с соединениями есть кнопка /Соединения/. Удивительно, не правда ли? Итак, открывшееся окно у нас поделено на две части. Левая - входы. Правая - выходы. Остальное достаточно интуитивно.

img-t:qjackctl-connections.png

Стоит отметить, что /system/ --- это входы и выходы звуковой карты. Остальное --- различные приложения.
Три основные вкладки --- /Звук/, /MIDI/ и /ALSA/. Для работы с обычными клиентами нам нужна вкладка Звук. Я ещё иногда подключаю USB-Midi клаву --- для таких соединений нужна вкладка MIDI.

**** Коммутатор
Каждый раз проставлять соединения? Может быть. А если их 50? 100? Тут-то нам на помощь и приходит /Коммутатор/.

/Коммутатор/ позволяет завадавать схемы соединений и сохранять их в файлы. Для запоминания этого дела используются имена клиентов и названия их входов/выходов. Для добавления соединения тыкаем на добавить, выбираем приложение и вход/выход. Затем соединяем нужные нам приложения и нажимаем сохранить. Остальное достаточно интуитивно.

img-t:qjackctl-commutator.png

*** Ещё немного про [[http://jackaudio.org/][JACK]]
Есть ещё одна функция у Jack, о которой я хочу рассказать. И эта функция касается времени и темпа.

Для тех приложений, у которых есть темп и/или текущее время (положение в проигрываемой композиции), Jack предоставляет возможность обмена этой информацией. Для этого задаётся один master, который и определяет общий темп и текущее время.

Например, используя драммашину и лупер (о которых я расскажу далее), необходимо их настраивать так, чтобы одно работало синхронно с другим. Для этого драммашина выставляется в master, а в лупере нужно поставить галочку "синхронизация с Jack" - таким образом лупер будет синхронизироваться с драммашиной. Очень удобно.

На всякий случай укажу страницу, на которой есть список приложений, работающих с Jack Audio Connection Kit: http://jackaudio.org/applications.

** Микшер
Думаю, никто не будет сомневаться, что централизованное управление громкостью каналов необходимо для полноценной записи звука. И такое приложение есть. [[http://home.gna.org/jackmixer/][Jack Mixer]].

Сам по себе [[http://home.gna.org/jackmixer/][Jack Mixer]] достаточно прост. Можно даже сказать, что он примитивен. Но для работы с Jack его вполне достаточно.

img-t:jack-mixer.png

В Mixer'е есть два вида каналов: /входные/ и /выходные/. Каждый из них может быть как стерео, так и моно. Выходными каналами я не пользуюсь (кроме MAIN - общий канал). Входные же использую для подключения в них приложений. При этом каждый из каналов имеет свой выход.

Вообще, в идеале всё можно подключать через Mixer, но лучше найти оптимальную схему.
Настройки Mixer'а можно сохранять в файл.

*Важное замечание:* jack-mixer будучи включенным нарушает работу некоторых программ, среди которых Ardour, так что я от микшера отказался.

** Графический коммутатор
Графический коммутатор предназначен для тех, кто любит поперетаскивать соединения. Для этого существует приложение Patchage.
Достаточно красивая утилита, интерфейс интуитивен. Но в её удобстве я немного сомневаюсь.

img-t:patchage.png

** LADSPA Host
[[http://ru.wikipedia.org/wiki/LADSPA][LADSPA]] --- это как VST, только под ринупс. Соответственно для LADSPA должен быть хост. Одним из таких является [[http://jack-rack.sourceforge.net/][Jack Rack]]. Можно эффекты в цепь добавлять, можно удалять, можно настраивать. Достаточно прост.

img-t:jack-rack.png

** Метроном
В качестве метронома я использую [[http://das.nasophon.de/gtklick/][Gtklick]].
Снова очень простая программа. Даже описывать не буду.

img-t:gtklick.png

** Тюнер
Тюнеров под Jack как и метрономов много. Я пробовал некоторые из них и более всего мне понравился [[http://freecode.com/projects/lingot][Lingot]].

img-t:lingot.png

** [[http://ru.wikipedia.org/wiki/%D0%A6%D0%B8%D1%84%D1%80%D0%BE%D0%B2%D0%B0%D1%8F_%D0%B7%D0%B2%D1%83%D0%BA%D0%BE%D0%B2%D0%B0%D1%8F_%D1%80%D0%B0%D0%B1%D0%BE%D1%87%D0%B0%D1%8F_%D1%81%D1%82%D0%B0%D0%BD%D1%86%D0%B8%D1%8F][DAW]]
Среди DAW для Jack мне известны [[http://ardour.org/][Ardour]] и [[http://traverso-daw.org/][Traverso]]. С натяжкой таковым можно считать ещё и [[http://qtractor.sourceforge.net/qtractor-index.html][QTractor]], но его лучше назвать audio/midi секвенсором.

Я пользуюсь [[http://ardour.org/][Ardour]], поэтому считаю его лучшим :) . Описывать подробности не буду, ибо их там ОЧЕНЬ много, но скажу, что кто-то в интернетах называл Ardour похожим на Pro Tools. Не знаю, насколько это правда, потому что в жизни не видел Pro Tools.

img-t:ardour.png

** Драммашина
*** [[http://www.hydrogen-music.org/hcms/][Hydrogen]]
Так как редко у кого есть персональный ударник с собой и установкой 24/7, удобно иметь драммашину. Единственным нормальным творением под Jack такого рода является [[http://www.hydrogen-music.org/hcms/][Hydrogen]].

Умеет много чего приятного, в том числе делиться текущими временем и темпом с другими Jack-приложениями.

img-t:hydrogen.png

Но тут есть одно замечание. У меня не заработало переключение на Jack из [[http://ru.wikipedia.org/wiki/%D0%93%D1%80%D0%B0%D1%84%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9_%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D1%84%D0%B5%D0%B9%D1%81_%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F][гуйца]]. Для того, чтобы Hydrogen стал работать так, как нам надо, нужно открыть файл _~/.hydrogen/hydrogen.conf_. Там знакомый многим XML. Ищем строку

#+BEGIN_SRC xml
<audio_driver>Alsa</audio_driver>
#+END_SRC

и заменяем её вот этой

#+BEGIN_SRC xml
<audio_driver>Jack</audio_driver>
#+END_SRC

Если хотим сделать его master'ом, то тыкаем на /J.MASTER/, если хотим вообще отключить транспорт времени и темпа, то тыкаем на /J.TRANS/ (при этом звук будет всё равно идти через Jack).

*** [[http://drumgizmo.org/][Drumgizmo]]
Ещё одна драммашина. Представляет из себя LV2-плагин с миди входом и аудио выходом, так что как в Hydrogen не получится записать партию в самой программе, зато удобно использовать с Ardour, прописывая партию в midi дорожке.

img-t:drumgizmo.png

Заметно выделяется тем, что использует неимоверное количество памяти и процессора, иногда даже Ardour вылетает из-за него.

На [[http://drumgizmo.org/][офф. сайте]] есть три установки для скачивания, но [[http://www.drumgizmo.org/wiki/doku.php?id=kits:muldjordkit][единственная более-менее нормальная]] распространяется под лицензией, не разрешающей коммерческое использование.

** Процессоры эффектов
По моему опыту, записать бас достаточно просто: берём линейный сигнал, проходимся по нему немного компрессором и готово. А вот с гитарастами всё намного тяжелее. Дист, воткнутый в линию выдаёт жужжание и лютый треск, а на клине слушать линейный сигнал гитары просто невозможно. Надо что-то делать с этим. Вот как раз для этого я обычно использую процессоры эффектов.

Мне известно две более-менее продвинутых программы: [[http://guitarix.sourceforge.net/][Guitarix]] и [[http://rakarrack.sourceforge.net/][Rakarrack]].

*** [[http://guitarix.sourceforge.net/][Guitarix]]

img-t:guitarix.png

Для тех, кто знаком с GuitarRig интерфейс покажется знакомым. Да и функции примерно такие же. Кабинеты, усилители, перегрузы... Всё в этом духе. Незаменимая вещь. Есть несколько встроенных пресетов, которые хорошо звучат.

Стоит только сказать, что поменять порядок эффектов или удалить их можно нажав на /Config Mode/, а чтобы выйти из этого режима, снова нажать на /Config Mode/.

*** [[http://rakarrack.sourceforge.net/][Rakarrack]]

img-t:rakarrack.png

Rakarrack имеет свои особенности.

Первая особенность - настройки трогать руками не стоит (те, которые Settings → Preferences), потому что вероятность падения в таком случае возрастает многократно.

Вторая особенность - совершенно безумные эффекты, например генератор шума на основе сигнала или "имитация" человеческого голоса на основе всё того же сигнала. 60 пресетов из коробки, полных космических цепей.

Если вы любите играть Ambient, но не умеете или не имеете фортепиано, то Rakarrack - то, что вам нужно.

img-t:rakarrack-banks.png

** Синтезаторы

Тут я, к сожалению, совсем не в теме. Ибо не пользую особо. Единственное приложение, которое я хоть иногда запускаю --- [[http://qsynth.sourceforge.net/qsynth-index.html][Qsynth]], который является графической оболочкой для [[http://sourceforge.net/apps/trac/fluidsynth/][fluidsynth]]. Пока без скриншотиков и инструкций, ибо лень. Может быть потом как-нибудь доделаю. В любом случае, синтезаторами я не пользуюсь, да и не думаю, что fluidsynth является лучшим решением.

** [[http://calf.sourceforge.net/][Calf]]
Стоит отдельного упоминания. [[http://calf.sourceforge.net/][Calf]] --- пакет студийных эффектов в виде LV2-плагинов. Среди них есть несколько синтезаторов, компрессор, delay, reverb и многие другие. Сейчас полностью перешёл на эти обработчики.

** Looper
Луперов под Jack тоже предостаточно. Даже в Rakarrack'е есть свой. Но я более всего пользуюсь [[http://essej.net/sooperlooper/][SooperLooper]].

img-t:sooperlooper.png

Пользоваться SooperLooper не очень просто, поэтому я напишу пару строк на эту тему.

Во-первых, для особых любителей скажу, что нужное нам приложение называется в системе не sooperlooper, а slgui, ибо сам sooperlooper - демон.

После запуска мы увидим одну пустую дорожку и общие настройки сверху. SooperLooper умеет полноценно обрабатывать midi-события, так что если у вас завалался midi-контроллер --- возрадуйтеся. У меня не завалялся :( .

Я опишу тот случай, когда мы пользуем лупер с Hydrogen.\\
Первым делом проставим в поле sync to значение Jack/Host. Темп у нас автоматически проставится такой же, как и в Hydrogen. Далее выставляем quantize : cycle.\\
Теперь к настройкам дорожек. Там надо ткнуть на sync и play sync. В таком случае у нас дорожка будет автоматически выравниваться с Hydrogen'ом. Пожалуй, всё.

Как работают кнопочки record, overdub и прочие большие синенькие кнопки, предлагаю разобраться экспериментально :) .

** Визуализация
В этом пункте я упомяну приложения, которые делают на основе звука картинку.

Я пробовал несколько таких, но заработал у меня нормально только [[http://projectm.sourceforge.net/][ProjectM]]. Для работы с Jack есть отдельный пакет --- [[http://packages.debian.org/ru/wheezy/projectm-jack][projectm-jack]].

Программа достаточно тривиальна. Для того, чтобы попасть в меню, надо нажать Ctrl-M, это --- единственное, о чём здесь стоит упомянуть. Посмотрите видосики или скриншотики на официальном сайте. Есть очень даже симпатичные визуализаторы.

* Заключение
[[https://dl.dropboxusercontent.com/u/20940723/2013_11_29.mp3][Пример композиции, записанной в Linux]].

Записывал я сам специально для Basslife.ru и этого цикла постов в частности.

Запись не подвергалась никакой обработке (разве что компрессором бас поджал). Все дорожки оставлены в том виде, в котором были записаны.\\
Все инструменты (бас и гитара) были подключены напрямую в звуковую карту - никаких микрофонов или чего-то ещё.\\
Для гитарного звука использовались Rakarrack (чистый) и Guitarix (перегруженный).\\
Бас писался "как есть".\\
На барабанах играет Hydrogen.

* Мои вопросы
В этой секции я буду описывать те вопросы, ответы на которые не смог найти сам. Если кто-то сможет мне с этим помочь, буду очень благодарен.

1. Есть ли LV2-плагин preverb'а?

#+INCLUDE: ../disqus.org

